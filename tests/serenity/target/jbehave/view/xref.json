{"xref": {
  "stories": [
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementPositive.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is not logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is not logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is not logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is not logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is not logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is not logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is not logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          }
        ],
        "name": "APIKeyReplacementPositive.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DealsAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Deals API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DealsAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Deals API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Deals API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Deals API page",
                  "durationInMillis": 5612
                },
                {
                  "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 613
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 157
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Deals API page",
                "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6527
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_GeneralTermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test General Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_GeneralTermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test General Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open General Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open General Terms Of Use page",
                  "durationInMillis": 2665
                },
                {
                  "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 505
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 64
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open General Terms Of Use page",
                "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3240
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_PartnerAPITermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_PartnerAPITermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API Terms Of Use page",
                  "durationInMillis": 2520
                },
                {
                  "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 573
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 58
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API Terms Of Use page",
                "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3172
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/CreateNewAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Create New Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page",
              "Then check general page elements for Pantheon Create New Account page"
            ]
          }
        ],
        "name": "CreateNewAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Create New Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page",
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2420
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1537
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 911
                },
                {
                  "step": "Then check general page elements for Pantheon Create New Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
                  "durationInMillis": 20433
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Create New Account page from LogIn page",
                "Then check general page elements for Pantheon Create New Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 25346
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_WordPress.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test WordPress Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_WordPress.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test WordPress Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open WordPress Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open WordPress Widget page",
                  "durationInMillis": 4805
                },
                {
                  "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 658
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open WordPress Widget page",
                "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5502
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Home.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Home Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        ],
        "name": "Home.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Home Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3125
                },
                {
                  "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20525
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 39
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for general page elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1219
                },
                {
                  "step": "Then check that Twitter's list of events is shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that Twitter's list of events is shown",
                  "durationInMillis": 62
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 163
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for twitter's list of events",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check that Twitter's list of events is shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Your API Key"
                ],
                [
                  "pageURL",
                  "https://developer-acct.ticketmaster.com/user/login"
                ],
                [
                  "elementLocation",
                  "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1063
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                    "durationInMillis": 1002
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                    "durationInMillis": 123
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Review Documentation"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/getting-started/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1161
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                    "durationInMillis": 1144
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                    "durationInMillis": 952
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Explore The API"
                ],
                [
                  "pageURL",
                  "{url}/api-explorer/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2008
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                    "durationInMillis": 1822
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                    "durationInMillis": 387
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Android"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#android-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1388
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                    "durationInMillis": 225
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                    "durationInMillis": 733
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Backend"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#backend-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1073
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                    "durationInMillis": 347
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                    "durationInMillis": 181
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "iOS"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#iOS-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1604
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                    "durationInMillis": 427
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                    "durationInMillis": 25
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Web"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#web-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2558
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                    "durationInMillis": 266
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                    "durationInMillis": 24
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Tech blog"
                ],
                [
                  "pageURL",
                  "https://tech.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//h1[@class='site-title']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1714
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                    "durationInMillis": 3151
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                    "durationInMillis": 239
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Medium Publication"
                ],
                [
                  "pageURL",
                  "https://medium.com/ticketmaster-tech"
                ],
                [
                  "elementLocation",
                  "//h2[text()='Because Engineers are Fans Too!']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2140
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                    "durationInMillis": 1963
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                    "durationInMillis": 87
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Partner API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/partner/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1653
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                    "durationInMillis": 224
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                    "durationInMillis": 3807
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Deals API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/deals-api/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2102
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                    "durationInMillis": 339
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                    "durationInMillis": 1814
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Legacy docs"
                ],
                [
                  "pageURL",
                  "http://apidocs.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//td[@class='WikiLogoName']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1584
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                    "durationInMillis": 329
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                      "cause": {
                        "@class": "java.lang.AssertionError",
                        "detailMessage": "Element should be visible",
                        "stackTrace": [
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.failWithMessage(WebElementFacadeImpl.java:735)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.shouldBeVisible(WebElementFacadeImpl.java:385)",
                          "bla.tm.pages.AnyPage.keyPageElementIsVisible(AnyPage.java:8)",
                          "bla.tm.steps.AnyPageSteps.checkIfPageIsOpened(AnyPageSteps.java:24)",
                          "bla.tm.steps.AnyPageSteps$$EnhancerByCGLIB$$49e838ad.CGLIB$checkIfPageIsOpened$0(<generated>)",
                          "bla.tm.steps.AnyPageSteps$$EnhancerByCGLIB$$49e838ad$$FastClassByCGLIB$$ee442515.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.AnyPageSteps$$EnhancerByCGLIB$$49e838ad.checkIfPageIsOpened(<generated>)",
                          "bla.tm.definitions.site.HomePageDefinition.checkIfPageIsOpened(HomePageDefinition.java:44)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1011)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:883)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ]
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1011)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:883)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "0359a11f-20ab-4f65-9ee8-6dd2dd18d0ad"
                    },
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                    "durationInMillis": 36231
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            }
          ],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 101269
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/EditProfile.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Edit Profile Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          }
        ],
        "name": "EditProfile.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Edit Profile Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          },
          "storyPath": "stories/site/pantheon/EditProfile.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3612
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1334
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 4492
                },
                {
                  "step": "When navigate to Pantheon Edit Profile page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
                  "durationInMillis": 3104
                },
                {
                  "step": "Then check general page elements for Pantheon Edit Profile page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
                  "durationInMillis": 20404
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "When navigate to Pantheon Edit Profile page from User Account page",
                "Then check general page elements for Pantheon Edit Profile page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 32986
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserLogIn.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User LonIn Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "Then check general page elements for Pantheon User LonIn page"
            ]
          }
        ],
        "name": "UserLogIn.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User LonIn Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "Then check general page elements for Pantheon User LonIn page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2752
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1056
                },
                {
                  "step": "Then check general page elements for Pantheon User LonIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User LonIn page",
                  "durationInMillis": 20318
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "Then check general page elements for Pantheon User LonIn page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24177
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementNegative.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Commerce API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When User is logged to site (Commerce API)",
              "Then check that API key is provided for all placeholders on Commerce API page"
            ]
          },
          {
            "title": "(APi Key - Top Picks API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "When User is logged to site (Top Picks API)",
              "Then check that API key is provided for all placeholders on Top Picks API page"
            ]
          },
          {
            "title": "(APi Key - Season Ticketing API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "When User is logged to site (Season Ticketing API)",
              "Then check that API key is provided for all placeholders on Season Ticketing API page"
            ]
          },
          {
            "title": "(APi Key - International Discovery API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "When User is logged to site (International Discovery API)",
              "Then check that API key is provided for all placeholders on International Discovery API page"
            ]
          },
          {
            "title": "(APi Key - Publish API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "When User is logged to site (Publish API)",
              "Then check that API key is provided for all placeholders on Publish API page"
            ]
          },
          {
            "title": "(APi Key - Deals API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "When User is logged to site (Deals API)",
              "Then check that API key is provided for all placeholders on Deals API page"
            ]
          },
          {
            "title": "(APi Key - Partner API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "When User is logged to site (Partner API)",
              "Then check that API key is provided for all placeholders on Partner API page"
            ]
          },
          {
            "title": "(APi Key - Inventory Status API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "When User is logged to site (Inventory Status API)",
              "Then check that API key is provided for all placeholder on Inventory Status API page"
            ]
          }
        ],
        "name": "APIKeyReplacementNegative.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v1 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV1.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v1 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v1 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v1 page",
                  "durationInMillis": 4434
                },
                {
                  "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1025
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v1 page",
                "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5491
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PartnerAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PartnerAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API page",
                  "durationInMillis": 5849
                },
                {
                  "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 827
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API page",
                "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6714
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Search.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Search Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Search.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Search Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Search.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "searchRequest",
                  "test"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3965
                  },
                  {
                    "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                    "durationInMillis": 362
                  },
                  {
                    "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                    "durationInMillis": 23204
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/search/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "| searchRequest |\n|      test     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "searchRequest"
                  ],
                  "data": [
                    [
                      [
                        "searchRequest",
                        "test"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "And insert Search Parameter <searchRequest> and navigate to Search page",
                  "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 27537
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 2979
                },
                {
                  "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10339
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 47
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 3
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 1300
                },
                {
                  "step": "When check visibility and click DirectPaymentButton element of Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
                  "durationInMillis": 840
                },
                {
                  "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "durationInMillis": 1473
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 40
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "When check visibility and click DirectPaymentButton element of Widgets page",
                "Then check that new page opened from Direct Payment Button has has appropriate url"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Checkout Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/checkout/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 831
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                    "durationInMillis": 2808
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                    "durationInMillis": 39
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/event-discovery/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 1946
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                    "durationInMillis": 771
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                    "durationInMillis": 3731
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Countdown Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/countdown/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 925
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                    "durationInMillis": 2246
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                    "durationInMillis": 567
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Calendar Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/calendar/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 708
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                    "durationInMillis": 1770
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                    "durationInMillis": 952
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "WordPress Widget Learn Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/wordpress/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 1427
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                    "durationInMillis": 1378
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                    "durationInMillis": 722
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 37908
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/OpenSource.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Open Source Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "OpenSource.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Open Source Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/OpenSource.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Open Source"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/"
                ],
                [
                  "pageTitle",
                  "//h1[@id='logo']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3415
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                    "durationInMillis": 565
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                    "durationInMillis": 50
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/blogs/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Open Source"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/"
                      ],
                      [
                        "pageTitle",
                        "//h1[@id='logo']"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4037
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_OauthAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Oauth API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_OauthAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Oauth API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Oauth API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Oauth API page",
                  "durationInMillis": 2997
                },
                {
                  "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 566
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Oauth API page",
                "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3601
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Event Discovery Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_EventDiscovery.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Event Discovery Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4743
                },
                {
                  "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 597
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5372
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_CertifiedPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Certified Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_CertifiedPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Certified Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Certified Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Certified Partners page",
                  "durationInMillis": 5265
                },
                {
                  "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10328
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Certified Partners page",
                "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 15626
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Events.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Events Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Events.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Events Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/Events.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Events page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Events page",
                  "durationInMillis": 2391
                },
                {
                  "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10323
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 47
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/events/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Events page",
                "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12764
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Partners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/partners/Partners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partners page",
                  "durationInMillis": 3488
                },
                {
                  "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20375
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partners page",
                "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 23903
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch page",
                  "durationInMillis": 3925
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10274
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch page",
                "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1382
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2572
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 76
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2263
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 3632
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 41
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1437
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2397
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 370
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 989
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1655
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 733
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 885
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1775
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 688
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 735
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2760
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 127
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 38781
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "durationInMillis": 3474
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 876
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4399
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Calendar.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Calendar Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Calendar.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Calendar Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3432
                },
                {
                  "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1380
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4843
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_DistributionPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Distribution Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_DistributionPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Distribution Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Distribution Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Distribution Partners page",
                  "durationInMillis": 3462
                },
                {
                  "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 359
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/distribution-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Distribution Partners page",
                "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3871
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserApps.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "manage my Apps",
          "asA": "user of Ticket Master Developer portal",
          "iWantTo": "perform CRUD operations with my apps",
          "soThat": ""
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "And navigate to Pantheon LogIn page from Home page",
              "And navigate to Pantheon User Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app positive",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given And navigate to myApps page",
              "And open Edit App Page for the first application",
              "When change all possible fields on Edit App Page",
              "And apply changes on Edit App Page",
              "And open Edit App Page for the first application",
              "Then all changes have been applied on Edit App Page"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField|\n|App Name     |\n|Redirect URI |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "App Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to myApps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And apply changes on Edit App Page",
              "Then the form-error is appear on field <appFormField>"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App positive [Add New App - App Name field with value]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When complete form with valid values on Add New App Page",
              "And submit form on Add New App Page",
              "Then the \"App Created!\" message is displayed",
              "And the New App is appear in the list of apps"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App negative [Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|requiredField|\n|App Name     |\n|Redirect URI |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "requiredField"
              ],
              "data": [
                [
                  [
                    "requiredField",
                    "App Name"
                  ]
                ],
                [
                  [
                    "requiredField",
                    "Redirect URI"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "And make <requiredField> field empty",
              "When submit form on Add New App Page",
              "Then the form-error is appear on field <requiredField>"
            ]
          },
          {
            "title": "(Pantheon|Delete App) Delete App positive",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When delete predefined app",
              "Then the \"App Deleted!\" message is displayed",
              "And the predefined app is removed from the list of app"
            ]
          }
        ],
        "name": "UserApps.story"
      },
      "localizedNarrative": "In order to manage my Apps\nAs a user of Ticket Master Developer portal\nI want to perform CRUD operations with my apps",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Countdown.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Countdown Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Countdown.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Countdown Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 5458
                },
                {
                  "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 383
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5880
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_TopPicksAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Top Picks API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_TopPicksAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Top Picks API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Top Picks API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Top Picks API page",
                  "durationInMillis": 5000
                },
                {
                  "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 655
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 106
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Top Picks API page",
                "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5768
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Blogs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Blogs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Blogs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Blogs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Blogs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Blogs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Blogs page",
                  "durationInMillis": 3601
                },
                {
                  "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 30370
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/blogs/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Blogs page",
                "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 34010
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CalendarWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Calendar Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,zipCode,radius",
              "And store values of: apiKey,keyword,zipCode,radius",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button",
              "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CalendarWidget.story"
      },
      "localizedNarrative": "In order to setup Calendar Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3445
                },
                {
                  "step": "Then the required fields are not empty on the Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
                  "durationInMillis": 267
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then the required fields are not empty on the Calendar Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,zipCode,radius",
              "And store values of: apiKey,keyword,zipCode,radius",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2172
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 3351
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 377
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 863
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2443
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 790
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And change values for: apiKey,keyword,zipCode,radius",
                "And store values of: apiKey,keyword,zipCode,radius",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "zipCode",
                  "01000"
                ],
                [
                  "countryName",
                  "France"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Calendar Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Calendar Widget page",
                    "durationInMillis": 1772
                  },
                  {
                    "step": "When change value of Zip Code <zipCode>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of Zip Code ｟01000｠",
                    "durationInMillis": 2206
                  },
                  {
                    "step": "Then the Country field contains appropriate value <countryName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country field contains appropriate value ｟France｠",
                    "durationInMillis": 88
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "01000"
                      ],
                      [
                        "countryName",
                        "France"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "K1P 1J1"
                      ],
                      [
                        "countryName",
                        "Canada"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Calendar Widget page",
                  "When change value of Zip Code <zipCode>",
                  "Then the Country field contains appropriate value <countryName>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "zipCode",
                  "K1P 1J1"
                ],
                [
                  "countryName",
                  "Canada"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Calendar Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Calendar Widget page",
                    "durationInMillis": 2524
                  },
                  {
                    "step": "When change value of Zip Code <zipCode>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of Zip Code ｟K1P 1J1｠",
                    "durationInMillis": 1845
                  },
                  {
                    "step": "Then the Country field contains appropriate value <countryName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country field contains appropriate value ｟Canada｠",
                    "durationInMillis": 76
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "01000"
                      ],
                      [
                        "countryName",
                        "France"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "K1P 1J1"
                      ],
                      [
                        "countryName",
                        "Canada"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Calendar Widget page",
                  "When change value of Zip Code <zipCode>",
                  "Then the Country field contains appropriate value <countryName>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button",
              "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2749
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 358
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 3706
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1952
                },
                {
                  "step": "Then values of fields: apiKey,keyword,zipCode,radius equals stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values of fields: ｟apiKey,keyword,zipCode,radius｠ equals stored values",
                  "durationInMillis": 278
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 50
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,zipCode,radius",
                "And change values for: apiKey,keyword,zipCode,radius",
                "When click reset button",
                "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2511
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 694
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 3902
                },
                {
                  "step": "When click reset button on Calendar Widget Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button on Calendar Widget Page",
                  "durationInMillis": 672
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 907
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2567
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 315
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,zipCode,radius",
                "And change values for: apiKey,keyword,zipCode,radius",
                "When click reset button on Calendar Widget Page",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2102
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 308
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 1050
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 137
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2146
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 431
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 1653
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 53
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 50931
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Season Ticketing API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_SeasonTicketingAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Season Ticketing API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Season Ticketing API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Season Ticketing API page",
                  "durationInMillis": 3186
                },
                {
                  "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 813
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 71
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Season Ticketing API page",
                "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4077
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_ChangeLog.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test ChangeLog Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_ChangeLog.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test ChangeLog Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open ChangeLog page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open ChangeLog page",
                  "durationInMillis": 7175
                },
                {
                  "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 265
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open ChangeLog page",
                "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7474
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_GettingStarted.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Getting Started Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_GettingStarted.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Getting Started Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 5918
                },
                {
                  "step": "When Commerce API menu has list of methods",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When Commerce API menu has list of methods",
                  "durationInMillis": 128563
                },
                {
                  "step": "And open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And open Getting Started page",
                  "durationInMillis": 2239
                },
                {
                  "step": "Then all the Commerce API methods are shown on Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
                  "durationInMillis": 60943
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1088
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "When Commerce API menu has list of methods",
                "And open Getting Started page",
                "Then all the Commerce API methods are shown on Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 1624
                },
                {
                  "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 808
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 201235
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_Nexus.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Join The Nexus Program Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_Nexus.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Join The Nexus Program Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_Nexus.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Join The Nexus Program page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Join The Nexus Program page",
                  "durationInMillis": 2686
                },
                {
                  "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 671
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Join The Nexus Program page",
                "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3403
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_ContactUs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Contact Us Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_ContactUs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Contact Us Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_ContactUs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Contact Us page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Contact Us page",
                  "durationInMillis": 3514
                },
                {
                  "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10395
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 36
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/contact-us/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Contact Us page",
                "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13950
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/SummaryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          }
        ],
        "name": "SummaryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 5071
                },
                {
                  "step": "Then Summary widget is shown for Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Getting Started page",
                  "durationInMillis": 172
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 318
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then Summary widget is shown for Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1893
                },
                {
                  "step": "Then Summary widget is shown for Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Home page",
                  "durationInMillis": 37
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 156
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then Summary widget is shown for Home page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 2438
                },
                {
                  "step": "Then Summary widget is shown for API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for API Explorer page",
                  "durationInMillis": 167
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 347
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then Summary widget is shown for API Explorer page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 10638
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventInSomeLocation.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "durationInMillis": 2984
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 603
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3628
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_APIExplorer.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 3435
                },
                {
                  "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 10578
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 36
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 14055
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_CommerceAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Commerce API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_CommerceAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Commerce API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 5498
                },
                {
                  "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 953
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6484
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_FAQ.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test FAQ Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_FAQ.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test FAQ Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_FAQ.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open FAQ page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open FAQ page",
                  "durationInMillis": 2802
                },
                {
                  "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 535
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 60
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/faq/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open FAQ page",
                "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3401
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SDKs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test SDK-s Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_SDKs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test SDK-s Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open SDKs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open SDKs page",
                  "durationInMillis": 3082
                },
                {
                  "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 598
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/sdks/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open SDKs page",
                "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Java Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-java"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 1672
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                    "durationInMillis": 948
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1092
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-JavaScript Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-javascript"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 2112
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                    "durationInMillis": 1184
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1003
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Scala Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-scala"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 2120
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                    "durationInMillis": 1132
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 811
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 15812
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_StartupsDevelopers.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Startups and Developers Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_StartupsDevelopers.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Startups and Developers Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Startups and Developers page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Startups and Developers page",
                  "durationInMillis": 3500
                },
                {
                  "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 484
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 748
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/startups-and-developers/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Startups and Developers page",
                "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4736
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 3431
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10288
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1445
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                    "durationInMillis": 1843
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 38
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 831
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1381
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 316
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 635
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 153
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 1769
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 22183
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PublishAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Publish API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PublishAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Publish API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Publish API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Publish API page",
                  "durationInMillis": 4287
                },
                {
                  "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 700
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Publish API page",
                "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5031
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Support Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Support Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Support page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Support page",
                  "durationInMillis": 3697
                },
                {
                  "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 225
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Support page",
                "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3945
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/FeedbackWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "send feedback",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the feedback widget\nand have ability to send feedback form to support",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          }
        ],
        "name": "FeedbackWidget.story"
      },
      "localizedNarrative": "In order to send feedback\nAs a user of Ticketmaster Developer Portal\nI want to use the feedback widget\nand have ability to send feedback form to support",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 4138
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And Feedback widget is not shown",
                  "durationInMillis": 593
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 94
                },
                {
                  "step": "Then Feedback widget elements are shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Feedback widget elements are shown",
                  "durationInMillis": 876
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Check that Feedback widget Elements are shown",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And Feedback widget is not shown",
                "When click Feedback button of Tutorials Widgets page",
                "Then Feedback widget elements are shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2604
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 112
                },
                {
                  "step": "Then click close button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then click close button of Feedback widget",
                  "durationInMillis": 510
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And Feedback widget is not shown",
                  "durationInMillis": 538
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget Close button",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "When click Feedback button of Tutorials Widgets page",
                "Then click close button of Feedback widget",
                "And Feedback widget is not shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1644
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 133
                },
                {
                  "step": "When all fields except Name are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Name are populated",
                  "durationInMillis": 614
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click send button of Feedback widget",
                  "durationInMillis": 118
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then error notification is shown for Feedback widget",
                  "durationInMillis": 38
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 92
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for NAME field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Name are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 794
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 132
                },
                {
                  "step": "When all fields except Email are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Email are populated",
                  "durationInMillis": 494
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click send button of Feedback widget",
                  "durationInMillis": 152
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then error notification is shown for Feedback widget",
                  "durationInMillis": 56
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 42
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for Email field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Email are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13916
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials page",
                  "durationInMillis": 2707
                },
                {
                  "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10341
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 44
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials page",
                "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1437
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                    "durationInMillis": 829
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 719
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1077
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 1789
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 687
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 698
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 754
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 1670
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1107
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                    "durationInMillis": 758
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 3119
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 942
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 2813
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 144
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1779
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 2295
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 570
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1762
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                    "durationInMillis": 856
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 2119
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 858
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 751
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 1949
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 710
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 1996
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 1064
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 48397
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CountdownWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Countdown Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "And get eventId by keyword ADELE",
              "And set first eventId from list",
              "Then the event poster contains ADELE"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CountdownWidget.story"
      },
      "localizedNarrative": "In order to setup Countdown Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 5134
                },
                {
                  "step": "Then the required fields are not empty on the Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
                  "durationInMillis": 423
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 49
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then the required fields are not empty on the Countdown Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1557
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 237
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 959
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2417
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 307
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2877
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 532
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 123
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 709
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2448
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 193
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3456
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 106
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 487
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 83
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 1772
                },
                {
                  "step": "Then the ApiKey and EventId fields have stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
                  "durationInMillis": 72
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "Then the ApiKey and EventId fields have stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2130
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 148
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 418
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 106
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 1857
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 831
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2365
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 186
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "And get eventId by keyword ADELE",
              "And set first eventId from list",
              "Then the event poster contains ADELE"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2115
                },
                {
                  "step": "When User is logged to site (Countdown Widget)",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When User is logged to site (Countdown Widget)",
                  "durationInMillis": 6534
                },
                {
                  "step": "And get eventId by keyword ADELE",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And get eventId by keyword ｟ADELE｠",
                  "durationInMillis": 1229
                },
                {
                  "step": "And set first eventId from list",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set first eventId from list",
                  "durationInMillis": 1295
                },
                {
                  "step": "Then the event poster contains ADELE",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event poster contains ｟ADELE｠",
                  "durationInMillis": 392
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When User is logged to site (Countdown Widget)",
                "And get eventId by keyword ADELE",
                "And set first eventId from list",
                "Then the event poster contains ADELE"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1377
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 255
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 2304
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 127
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1263
                },
                {
                  "step": "And switch to VISUAL Tab",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And switch to VISUAL Tab",
                  "durationInMillis": 1237
                },
                {
                  "step": "And set theme to full-width",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set theme to full-width",
                  "durationInMillis": 423
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 1201
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2370
                },
                {
                  "step": "And embedded html code contains stored theme",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored theme",
                  "durationInMillis": 128
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And switch to VISUAL Tab",
                "And set theme to full-width",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored theme"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1146
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 869
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 379
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 769
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 839
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2368
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 318
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1839
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 870
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 424
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 798
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 955
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2383
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 266
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1328
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 952
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 468
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 709
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 736
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2274
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 83
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 997
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1034
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 472
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 745
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 735
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2349
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 77
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1165
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 832
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 468
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 696
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 820
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2334
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 106
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1589
                },
                {
                  "step": "And enter custom ApiKey {InvalidApiKey123}",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
                  "durationInMillis": 453
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 73
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 381
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom ApiKey {InvalidApiKey123}",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1532
                },
                {
                  "step": "And enter custom EventId \"invalidEventId123\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
                  "durationInMillis": 638
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 180
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 501
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 49
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom EventId \"invalidEventId123\"",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 93648
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets_EventDiscoveryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "durationInMillis": 2855
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 414
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 51
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets EventDiscoveryWidget page",
                "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3324
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Universal Checkout Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_UniversalCheckout.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Universal Checkout Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Universal Checkout page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Universal Checkout page",
                  "durationInMillis": 4077
                },
                {
                  "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 571
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Universal Checkout page",
                "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4708
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test International Discovery API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InternationalDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test International Discovery API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open International Discovery API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open International Discovery API page",
                  "durationInMillis": 5971
                },
                {
                  "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1373
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open International Discovery API page",
                "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7379
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Event Discovery Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          }
        ],
        "name": "EventDiscoveryWidget.story"
      },
      "localizedNarrative": "In order to setup Event Discovery Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 6662
                },
                {
                  "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "durationInMillis": 375
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 40
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then the required fields are not empty and have default values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 2548
                },
                {
                  "step": "And change values for all possible fields on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
                  "durationInMillis": 7226
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 464
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 811
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2381
                },
                {
                  "step": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "durationInMillis": 873
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And change values for all possible fields on the Event Discovery Widget page",
                "And store all fields values on the Event Discovery Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "zipCode",
                  "NW1"
                ],
                [
                  "countryName",
                  "United Kingdom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2503
                  },
                  {
                    "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟NW1｠ on Event Discovery Widget Page",
                    "durationInMillis": 785
                  },
                  {
                    "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country Field contains appropriate value ｟United Kingdom｠ on Event Discovery Widget Page",
                    "durationInMillis": 1551
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "NW1"
                      ],
                      [
                        "countryName",
                        "United Kingdom"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "40104"
                      ],
                      [
                        "countryName",
                        "United States"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                  "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "zipCode",
                  "40104"
                ],
                [
                  "countryName",
                  "United States"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2966
                  },
                  {
                    "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟40104｠ on Event Discovery Widget Page",
                    "durationInMillis": 784
                  },
                  {
                    "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country Field contains appropriate value ｟United States｠ on Event Discovery Widget Page",
                    "durationInMillis": 1542
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "NW1"
                      ],
                      [
                        "countryName",
                        "United Kingdom"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "40104"
                      ],
                      [
                        "countryName",
                        "United States"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                  "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "keyword",
                  "ADELE"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2186
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 360
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 3844
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "keyword",
                  "STING"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2761
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 484
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 2356
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2350
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2683
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                    "durationInMillis": 55
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2469
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2491
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                    "durationInMillis": 2168
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2726
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 2491
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 76
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2270
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2550
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 79
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2024
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2266
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 115
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "101"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2577
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                    "durationInMillis": 2378
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 84
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "setValue",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2382
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 800
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 773
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 77
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2689
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 745
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 263
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 68
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "19999"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 1944
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 811
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 218
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 93
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "20000"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2218
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 713
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟20000｠ on Event Discovery Widget page",
                    "durationInMillis": 146
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 72
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 2007
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 1045
                },
                {
                  "step": "And change values for all possible fields on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
                  "durationInMillis": 6961
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1800
                },
                {
                  "step": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
                  "durationInMillis": 486
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 40
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 5
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And store all fields values on the Event Discovery Widget page",
                "And change values for all possible fields on the Event Discovery Widget page",
                "When click reset button",
                "Then all fields have been reseted to defaults on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 2588
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 341
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 1035
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2064
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 731
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 396
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 751
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 899
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2382
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 297
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2358
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 823
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 404
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 771
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1487
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2496
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 192
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2448
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 841
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 444
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 811
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1080
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2327
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 100
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2469
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 963
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 477
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 827
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 819
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2476
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 90
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2691
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 927
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 414
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 730
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 897
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2359
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 84
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 2625
                },
                {
                  "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
                  "durationInMillis": 261
                },
                {
                  "step": "Then the event message is shown \"Here other options for you.\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
                  "durationInMillis": 921
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 50
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                "Then the event message is shown \"Here other options for you.\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 150095
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/RequestNewPassword.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Request New Password Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          }
        ],
        "name": "RequestNewPassword.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Request New Password Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          },
          "storyPath": "stories/site/pantheon/RequestNewPassword.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3159
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1036
                },
                {
                  "step": "When navigate to Pantheon Request New Password page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
                  "durationInMillis": 802
                },
                {
                  "step": "Then check general page elements for Pantheon Request New Password page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
                  "durationInMillis": 20379
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Request New Password page from LogIn page",
                "Then check general page elements for Pantheon Request New Password page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 25398
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "debug",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          }
        ],
        "name": "UserAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2320
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1105
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 3792
                },
                {
                  "step": "Then check general page elements for Pantheon User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User Account page",
                  "durationInMillis": 20403
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": [
                {
                  "@name": "debug",
                  "@value": ""
                }
              ]
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "Then check general page elements for Pantheon User Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 27653
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InteractiveAPIConsole.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Interactive API Console Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/interactive-console/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "Then check general page elements for Interactive API Console Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_InteractiveAPIConsole.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Interactive API Console Page of Ticket Master Developer's site",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v2 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v2 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v2 page",
                  "durationInMillis": 5919
                },
                {
                  "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1117
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v2 page",
                "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7079
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/AffiliateID.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "user",
          "iWantTo": "perform an action",
          "soThat": "I can achieve a business goal"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "scenario description",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a system state",
              "When I do something",
              "Then system is in a different state"
            ]
          }
        ],
        "name": "AffiliateID.story"
      },
      "localizedNarrative": "As a user\nI want to perform an action\nSo that I can achieve a business goal",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Products and Docs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "PD.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Products and Docs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Products and Docs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Products and Docs page",
                  "durationInMillis": 2015
                },
                {
                  "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40391
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Products and Docs page",
                "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 42432
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Inventory Status API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InventoryStatusAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Inventory Status API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Inventory Status API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Inventory Status API page",
                  "durationInMillis": 4847
                },
                {
                  "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 292
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Inventory Status API page",
                "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5162
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_BrandingGuide.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Branding Guide Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_BrandingGuide.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Branding Guide Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_BrandingGuide.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Branding Guide page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Branding Guide page",
                  "durationInMillis": 3176
                },
                {
                  "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 195
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/branding-guide/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Branding Guide page",
                "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3394
      },
      "givenStory": false
    }
  ],
  "scenarios": [
    {
      "scenario": {
        "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Deals API page",
          "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Deals API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Deals API page",
              "durationInMillis": 5612
            },
            {
              "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 613
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 157
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Deals API page",
            "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open General Terms Of Use page",
          "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open General Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open General Terms Of Use page",
              "durationInMillis": 2665
            },
            {
              "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 505
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 64
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open General Terms Of Use page",
            "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API Terms Of Use page",
          "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API Terms Of Use page",
              "durationInMillis": 2520
            },
            {
              "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 573
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 58
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API Terms Of Use page",
            "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Create New Account page from LogIn page",
          "Then check general page elements for Pantheon Create New Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2420
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1537
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 911
            },
            {
              "step": "Then check general page elements for Pantheon Create New Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
              "durationInMillis": 20433
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Create New Account page from LogIn page",
            "Then check general page elements for Pantheon Create New Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open WordPress Widget page",
          "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open WordPress Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open WordPress Widget page",
              "durationInMillis": 4805
            },
            {
              "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 658
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open WordPress Widget page",
            "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for general page elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3125
            },
            {
              "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20525
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 39
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for general page elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for twitter's list of events",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check that Twitter's list of events is shown"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1219
            },
            {
              "step": "Then check that Twitter's list of events is shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that Twitter's list of events is shown",
              "durationInMillis": 62
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 163
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for twitter's list of events",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check that Twitter's list of events is shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for all the page links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "elementLocation"
          ],
          "data": [
            [
              [
                "elementKey",
                "Get Your API Key"
              ],
              [
                "pageURL",
                "https://developer-acct.ticketmaster.com/user/login"
              ],
              [
                "elementLocation",
                "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
              ]
            ],
            [
              [
                "elementKey",
                "Review Documentation"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/getting-started/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Explore The API"
              ],
              [
                "pageURL",
                "{url}/api-explorer/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Android"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#android-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Backend"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#backend-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "iOS"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#iOS-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Web"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#web-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Tech blog"
              ],
              [
                "pageURL",
                "https://tech.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//h1[@class='site-title']/a"
              ]
            ],
            [
              [
                "elementKey",
                "Medium Publication"
              ],
              [
                "pageURL",
                "https://medium.com/ticketmaster-tech"
              ],
              [
                "elementLocation",
                "//h2[text()='Because Engineers are Fans Too!']"
              ]
            ],
            [
              [
                "elementKey",
                "Partner API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/partner/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Deals API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/deals-api/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Legacy docs"
              ],
              [
                "pageURL",
                "http://apidocs.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//td[@class='WikiLogoName']/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Get Your API Key"
            ],
            [
              "pageURL",
              "https://developer-acct.ticketmaster.com/user/login"
            ],
            [
              "elementLocation",
              "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1063
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                "durationInMillis": 1002
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                "durationInMillis": 123
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Review Documentation"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/getting-started/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1161
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                "durationInMillis": 1144
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                "durationInMillis": 952
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Explore The API"
            ],
            [
              "pageURL",
              "{url}/api-explorer/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2008
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                "durationInMillis": 1822
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                "durationInMillis": 387
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Android"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#android-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1388
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                "durationInMillis": 225
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                "durationInMillis": 733
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Backend"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#backend-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1073
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                "durationInMillis": 347
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                "durationInMillis": 181
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "iOS"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#iOS-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1604
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                "durationInMillis": 427
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                "durationInMillis": 25
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Web"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#web-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2558
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                "durationInMillis": 266
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                "durationInMillis": 24
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Tech blog"
            ],
            [
              "pageURL",
              "https://tech.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//h1[@class='site-title']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1714
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                "durationInMillis": 3151
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                "durationInMillis": 239
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Medium Publication"
            ],
            [
              "pageURL",
              "https://medium.com/ticketmaster-tech"
            ],
            [
              "elementLocation",
              "//h2[text()='Because Engineers are Fans Too!']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2140
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                "durationInMillis": 1963
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                "durationInMillis": 87
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Partner API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/partner/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1653
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                "durationInMillis": 224
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                "durationInMillis": 3807
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Deals API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/deals-api/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2102
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                "durationInMillis": 339
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                "durationInMillis": 1814
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Legacy docs"
            ],
            [
              "pageURL",
              "http://apidocs.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//td[@class='WikiLogoName']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1584
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                "durationInMillis": 329
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                  "cause": {
                    "@class": "java.lang.AssertionError",
                    "detailMessage": "Element should be visible",
                    "stackTrace": [
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.failWithMessage(WebElementFacadeImpl.java:735)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.shouldBeVisible(WebElementFacadeImpl.java:385)",
                      "bla.tm.pages.AnyPage.keyPageElementIsVisible(AnyPage.java:8)",
                      "bla.tm.steps.AnyPageSteps.checkIfPageIsOpened(AnyPageSteps.java:24)",
                      "bla.tm.steps.AnyPageSteps$$EnhancerByCGLIB$$49e838ad.CGLIB$checkIfPageIsOpened$0(<generated>)",
                      "bla.tm.steps.AnyPageSteps$$EnhancerByCGLIB$$49e838ad$$FastClassByCGLIB$$ee442515.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.AnyPageSteps$$EnhancerByCGLIB$$49e838ad.checkIfPageIsOpened(<generated>)",
                      "bla.tm.definitions.site.HomePageDefinition.checkIfPageIsOpened(HomePageDefinition.java:44)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1011)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:883)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ]
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1011)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:883)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "0359a11f-20ab-4f65-9ee8-6dd2dd18d0ad"
                },
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                "durationInMillis": 36231
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        }
      ],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "When navigate to Pantheon Edit Profile page from User Account page",
          "Then check general page elements for Pantheon Edit Profile page"
        ]
      },
      "storyPath": "stories/site/pantheon/EditProfile.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3612
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1334
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 4492
            },
            {
              "step": "When navigate to Pantheon Edit Profile page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
              "durationInMillis": 3104
            },
            {
              "step": "Then check general page elements for Pantheon Edit Profile page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
              "durationInMillis": 20404
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "When navigate to Pantheon Edit Profile page from User Account page",
            "Then check general page elements for Pantheon Edit Profile page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "Then check general page elements for Pantheon User LonIn page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2752
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1056
            },
            {
              "step": "Then check general page elements for Pantheon User LonIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User LonIn page",
              "durationInMillis": 20318
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "Then check general page elements for Pantheon User LonIn page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v1 page",
          "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v1 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v1 page",
              "durationInMillis": 4434
            },
            {
              "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1025
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v1 page",
            "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API page",
          "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API page",
              "durationInMillis": 5849
            },
            {
              "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 827
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API page",
            "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "| searchRequest |\n|      test     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "searchRequest"
          ],
          "data": [
            [
              [
                "searchRequest",
                "test"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "And insert Search Parameter <searchRequest> and navigate to Search page",
          "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Search.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "searchRequest",
              "test"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3965
              },
              {
                "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                "durationInMillis": 362
              },
              {
                "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                "durationInMillis": 23204
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 2979
            },
            {
              "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10339
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 47
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 3
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click DirectPaymentButton element of Widgets page",
          "Then check that new page opened from Direct Payment Button has has appropriate url"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 1300
            },
            {
              "step": "When check visibility and click DirectPaymentButton element of Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
              "durationInMillis": 840
            },
            {
              "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "durationInMillis": 1473
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 40
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "When check visibility and click DirectPaymentButton element of Widgets page",
            "Then check that new page opened from Direct Payment Button has has appropriate url"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Checkout Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/checkout/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/event-discovery/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Countdown Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/countdown/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Calendar Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/calendar/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "WordPress Widget Learn Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/wordpress/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click <elementKey> element of Widgets page",
          "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Checkout Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/checkout/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 831
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                "durationInMillis": 2808
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                "durationInMillis": 39
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/event-discovery/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 1946
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                "durationInMillis": 771
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                "durationInMillis": 3731
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Countdown Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/countdown/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 925
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                "durationInMillis": 2246
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                "durationInMillis": 567
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Calendar Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/calendar/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 708
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                "durationInMillis": 1770
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                "durationInMillis": 952
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "WordPress Widget Learn Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/wordpress/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 1427
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                "durationInMillis": 1378
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                "durationInMillis": 722
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Open Source"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/"
              ],
              [
                "pageTitle",
                "//h1[@id='logo']"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/OpenSource.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Open Source"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/"
            ],
            [
              "pageTitle",
              "//h1[@id='logo']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3415
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                "durationInMillis": 565
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                "durationInMillis": 50
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Oauth API page",
          "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Oauth API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Oauth API page",
              "durationInMillis": 2997
            },
            {
              "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 566
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Oauth API page",
            "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4743
            },
            {
              "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 597
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Certified Partners page",
          "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Certified Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Certified Partners page",
              "durationInMillis": 5265
            },
            {
              "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10328
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Certified Partners page",
            "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/events/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Events page",
          "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/Events.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Events page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Events page",
              "durationInMillis": 2391
            },
            {
              "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10323
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 47
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/events/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Events page",
            "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partners page",
          "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/partners/Partners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partners page",
              "durationInMillis": 3488
            },
            {
              "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20375
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partners page",
            "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch page",
              "durationInMillis": 3925
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10274
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch page",
            "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "When check visibility and click <elementKey> element of Tutorials EventSearch page",
          "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1382
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 2572
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 76
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2263
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 3632
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 41
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1437
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 2397
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 370
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 989
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 1655
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 733
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 885
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1775
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 688
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 735
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 2760
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 127
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
          "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "durationInMillis": 3474
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 876
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
            "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3432
            },
            {
              "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1380
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/distribution-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Distribution Partners page",
          "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Distribution Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Distribution Partners page",
              "durationInMillis": 3462
            },
            {
              "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 359
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/distribution-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Distribution Partners page",
            "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 5458
            },
            {
              "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 383
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Top Picks API page",
          "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Top Picks API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Top Picks API page",
              "durationInMillis": 5000
            },
            {
              "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 655
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 106
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Top Picks API page",
            "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Blogs page",
          "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Blogs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Blogs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Blogs page",
              "durationInMillis": 3601
            },
            {
              "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 30370
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/blogs/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Blogs page",
            "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then the required fields are not empty on the Calendar Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3445
            },
            {
              "step": "Then the required fields are not empty on the Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
              "durationInMillis": 267
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then the required fields are not empty on the Calendar Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And change values for: apiKey,keyword,zipCode,radius",
          "And store values of: apiKey,keyword,zipCode,radius",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2172
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 3351
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 377
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 863
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2443
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 790
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And change values for: apiKey,keyword,zipCode,radius",
            "And store values of: apiKey,keyword,zipCode,radius",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "zipCode",
            "countryName"
          ],
          "data": [
            [
              [
                "zipCode",
                "01000"
              ],
              [
                "countryName",
                "France"
              ]
            ],
            [
              [
                "zipCode",
                "K1P 1J1"
              ],
              [
                "countryName",
                "Canada"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When change value of Zip Code <zipCode>",
          "Then the Country field contains appropriate value <countryName>"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "zipCode",
              "01000"
            ],
            [
              "countryName",
              "France"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Calendar Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Calendar Widget page",
                "durationInMillis": 1772
              },
              {
                "step": "When change value of Zip Code <zipCode>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of Zip Code ｟01000｠",
                "durationInMillis": 2206
              },
              {
                "step": "Then the Country field contains appropriate value <countryName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country field contains appropriate value ｟France｠",
                "durationInMillis": 88
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          }
        },
        {
          "parameters": [
            [
              "zipCode",
              "K1P 1J1"
            ],
            [
              "countryName",
              "Canada"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Calendar Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Calendar Widget page",
                "durationInMillis": 2524
              },
              {
                "step": "When change value of Zip Code <zipCode>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of Zip Code ｟K1P 1J1｠",
                "durationInMillis": 1845
              },
              {
                "step": "Then the Country field contains appropriate value <countryName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country field contains appropriate value ｟Canada｠",
                "durationInMillis": 76
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,zipCode,radius",
          "And change values for: apiKey,keyword,zipCode,radius",
          "When click reset button",
          "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2749
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 358
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 3706
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1952
            },
            {
              "step": "Then values of fields: apiKey,keyword,zipCode,radius equals stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values of fields: ｟apiKey,keyword,zipCode,radius｠ equals stored values",
              "durationInMillis": 278
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 50
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,zipCode,radius",
            "And change values for: apiKey,keyword,zipCode,radius",
            "When click reset button",
            "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,zipCode,radius",
          "And change values for: apiKey,keyword,zipCode,radius",
          "When click reset button on Calendar Widget Page",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2511
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 694
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 3902
            },
            {
              "step": "When click reset button on Calendar Widget Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button on Calendar Widget Page",
              "durationInMillis": 672
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 907
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2567
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 315
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,zipCode,radius",
            "And change values for: apiKey,keyword,zipCode,radius",
            "When click reset button on Calendar Widget Page",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2102
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 308
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 1050
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 137
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2146
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 431
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 1653
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 53
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Season Ticketing API page",
          "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Season Ticketing API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Season Ticketing API page",
              "durationInMillis": 3186
            },
            {
              "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 813
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 71
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Season Ticketing API page",
            "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open ChangeLog page",
          "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open ChangeLog page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open ChangeLog page",
              "durationInMillis": 7175
            },
            {
              "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 265
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open ChangeLog page",
            "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "When Commerce API menu has list of methods",
          "And open Getting Started page",
          "Then all the Commerce API methods are shown on Getting Started page"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 5918
            },
            {
              "step": "When Commerce API menu has list of methods",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When Commerce API menu has list of methods",
              "durationInMillis": 128563
            },
            {
              "step": "And open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And open Getting Started page",
              "durationInMillis": 2239
            },
            {
              "step": "Then all the Commerce API methods are shown on Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
              "durationInMillis": 60943
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1088
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "When Commerce API menu has list of methods",
            "And open Getting Started page",
            "Then all the Commerce API methods are shown on Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 1624
            },
            {
              "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 808
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Join The Nexus Program page",
          "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_Nexus.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Join The Nexus Program page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Join The Nexus Program page",
              "durationInMillis": 2686
            },
            {
              "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 671
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Join The Nexus Program page",
            "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/contact-us/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Contact Us page",
          "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_ContactUs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Contact Us page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Contact Us page",
              "durationInMillis": 3514
            },
            {
              "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10395
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 36
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/contact-us/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Contact Us page",
            "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then Summary widget is shown for Getting Started page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 5071
            },
            {
              "step": "Then Summary widget is shown for Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Getting Started page",
              "durationInMillis": 172
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 318
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then Summary widget is shown for Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then Summary widget is shown for Home page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1893
            },
            {
              "step": "Then Summary widget is shown for Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Home page",
              "durationInMillis": 37
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 156
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then Summary widget is shown for Home page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then Summary widget is shown for API Explorer page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 2438
            },
            {
              "step": "Then Summary widget is shown for API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for API Explorer page",
              "durationInMillis": 167
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 347
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then Summary widget is shown for API Explorer page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventInSomeLocation page",
          "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "durationInMillis": 2984
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 603
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventInSomeLocation page",
            "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 3435
            },
            {
              "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 10578
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 36
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 5498
            },
            {
              "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 953
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/faq/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open FAQ page",
          "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_FAQ.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open FAQ page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open FAQ page",
              "durationInMillis": 2802
            },
            {
              "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 535
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 60
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/faq/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open FAQ page",
            "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/sdks/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open SDKs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open SDKs page",
              "durationInMillis": 3082
            },
            {
              "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 598
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/sdks/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open SDKs page",
            "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(products-and-docs/sdks/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "SDK-Java Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-java"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-JavaScript Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-javascript"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-Scala Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-scala"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "When check visibility and click <elementKey> element of SDKs page",
          "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Java Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-java"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 1672
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                "durationInMillis": 948
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1092
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-JavaScript Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-javascript"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 2112
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                "durationInMillis": 1184
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1003
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Scala Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-scala"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 2120
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                "durationInMillis": 1132
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 811
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/startups-and-developers/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Startups and Developers page",
          "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Startups and Developers page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Startups and Developers page",
              "durationInMillis": 3500
            },
            {
              "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 484
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 748
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/startups-and-developers/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Startups and Developers page",
            "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 3431
            },
            {
              "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10288
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When check visibility and click <elementKey> element of Tutorials Widgets page",
          "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1445
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                "durationInMillis": 1843
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 38
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 831
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1381
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 316
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 635
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                "durationInMillis": 153
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 1769
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Publish API page",
          "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Publish API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Publish API page",
              "durationInMillis": 4287
            },
            {
              "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 700
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Publish API page",
            "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Support page",
          "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Support page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Support page",
              "durationInMillis": 3697
            },
            {
              "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 225
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Support page",
            "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Check that Feedback widget Elements are shown",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And Feedback widget is not shown",
          "When click Feedback button of Tutorials Widgets page",
          "Then Feedback widget elements are shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 4138
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And Feedback widget is not shown",
              "durationInMillis": 593
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 94
            },
            {
              "step": "Then Feedback widget elements are shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Feedback widget elements are shown",
              "durationInMillis": 876
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Check that Feedback widget Elements are shown",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And Feedback widget is not shown",
            "When click Feedback button of Tutorials Widgets page",
            "Then Feedback widget elements are shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget Close button",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When click Feedback button of Tutorials Widgets page",
          "Then click close button of Feedback widget",
          "And Feedback widget is not shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2604
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 112
            },
            {
              "step": "Then click close button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then click close button of Feedback widget",
              "durationInMillis": 510
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And Feedback widget is not shown",
              "durationInMillis": 538
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget Close button",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "When click Feedback button of Tutorials Widgets page",
            "Then click close button of Feedback widget",
            "And Feedback widget is not shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for NAME field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Name are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1644
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 133
            },
            {
              "step": "When all fields except Name are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Name are populated",
              "durationInMillis": 614
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click send button of Feedback widget",
              "durationInMillis": 118
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then error notification is shown for Feedback widget",
              "durationInMillis": 38
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 92
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for NAME field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Name are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for Email field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Email are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 794
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 132
            },
            {
              "step": "When all fields except Email are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Email are populated",
              "durationInMillis": 494
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click send button of Feedback widget",
              "durationInMillis": 152
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then error notification is shown for Feedback widget",
              "durationInMillis": 56
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 42
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for Email field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Email are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials page",
              "durationInMillis": 2707
            },
            {
              "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10341
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 44
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials page",
            "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "When check visibility and click <elementKey> element of Tutorials page",
          "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1437
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                "durationInMillis": 829
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 719
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1077
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 1789
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 687
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 698
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 754
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 1670
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1107
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                "durationInMillis": 758
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 3119
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 942
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 2813
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 144
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1779
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 2295
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 570
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1762
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                "durationInMillis": 856
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 2119
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 858
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 751
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 1949
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 710
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 1996
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 1064
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then the required fields are not empty on the Countdown Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 5134
            },
            {
              "step": "Then the required fields are not empty on the Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
              "durationInMillis": 423
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 49
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then the required fields are not empty on the Countdown Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1557
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 237
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 959
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2417
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 307
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2877
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 532
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 123
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 709
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2448
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 193
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "Then the ApiKey and EventId fields have stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3456
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 106
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 487
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 83
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 1772
            },
            {
              "step": "Then the ApiKey and EventId fields have stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
              "durationInMillis": 72
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "Then the ApiKey and EventId fields have stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2130
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 148
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 418
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 106
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 1857
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 831
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2365
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 186
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When User is logged to site (Countdown Widget)",
          "And get eventId by keyword ADELE",
          "And set first eventId from list",
          "Then the event poster contains ADELE"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2115
            },
            {
              "step": "When User is logged to site (Countdown Widget)",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When User is logged to site (Countdown Widget)",
              "durationInMillis": 6534
            },
            {
              "step": "And get eventId by keyword ADELE",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And get eventId by keyword ｟ADELE｠",
              "durationInMillis": 1229
            },
            {
              "step": "And set first eventId from list",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set first eventId from list",
              "durationInMillis": 1295
            },
            {
              "step": "Then the event poster contains ADELE",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event poster contains ｟ADELE｠",
              "durationInMillis": 392
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When User is logged to site (Countdown Widget)",
            "And get eventId by keyword ADELE",
            "And set first eventId from list",
            "Then the event poster contains ADELE"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1377
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 255
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 2304
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 127
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to full-width",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored theme"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1263
            },
            {
              "step": "And switch to VISUAL Tab",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And switch to VISUAL Tab",
              "durationInMillis": 1237
            },
            {
              "step": "And set theme to full-width",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set theme to full-width",
              "durationInMillis": 423
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 1201
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2370
            },
            {
              "step": "And embedded html code contains stored theme",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored theme",
              "durationInMillis": 128
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And switch to VISUAL Tab",
            "And set theme to full-width",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored theme"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1146
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 869
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 379
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 769
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 839
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2368
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 318
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1839
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 870
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 424
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 798
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 955
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2383
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 266
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1328
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 952
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 468
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 709
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 736
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2274
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 83
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 997
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1034
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 472
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 745
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 735
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2349
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 77
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1165
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 832
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 468
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 696
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 820
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2334
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 106
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom ApiKey {InvalidApiKey123}",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1589
            },
            {
              "step": "And enter custom ApiKey {InvalidApiKey123}",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
              "durationInMillis": 453
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 73
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 381
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom ApiKey {InvalidApiKey123}",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom EventId \"invalidEventId123\"",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1532
            },
            {
              "step": "And enter custom EventId \"invalidEventId123\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
              "durationInMillis": 638
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 180
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 501
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 49
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom EventId \"invalidEventId123\"",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets EventDiscoveryWidget page",
          "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "durationInMillis": 2855
            },
            {
              "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 414
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 51
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets EventDiscoveryWidget page",
            "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Universal Checkout page",
          "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Universal Checkout page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Universal Checkout page",
              "durationInMillis": 4077
            },
            {
              "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 571
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Universal Checkout page",
            "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open International Discovery API page",
          "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open International Discovery API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open International Discovery API page",
              "durationInMillis": 5971
            },
            {
              "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1373
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open International Discovery API page",
            "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then the required fields are not empty and have default values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 6662
            },
            {
              "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "durationInMillis": 375
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 40
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then the required fields are not empty and have default values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change values for all possible fields on the Event Discovery Widget page",
          "And store all fields values on the Event Discovery Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 2548
            },
            {
              "step": "And change values for all possible fields on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
              "durationInMillis": 7226
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 464
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 811
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2381
            },
            {
              "step": "And embedded html code contains stored values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
              "durationInMillis": 873
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And change values for all possible fields on the Event Discovery Widget page",
            "And store all fields values on the Event Discovery Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "zipCode",
            "countryName"
          ],
          "data": [
            [
              [
                "zipCode",
                "NW1"
              ],
              [
                "countryName",
                "United Kingdom"
              ]
            ],
            [
              [
                "zipCode",
                "40104"
              ],
              [
                "countryName",
                "United States"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
          "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "zipCode",
              "NW1"
            ],
            [
              "countryName",
              "United Kingdom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2503
              },
              {
                "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟NW1｠ on Event Discovery Widget Page",
                "durationInMillis": 785
              },
              {
                "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country Field contains appropriate value ｟United Kingdom｠ on Event Discovery Widget Page",
                "durationInMillis": 1551
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          }
        },
        {
          "parameters": [
            [
              "zipCode",
              "40104"
            ],
            [
              "countryName",
              "United States"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2966
              },
              {
                "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟40104｠ on Event Discovery Widget Page",
                "durationInMillis": 784
              },
              {
                "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country Field contains appropriate value ｟United States｠ on Event Discovery Widget Page",
                "durationInMillis": 1542
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "keyword"
          ],
          "data": [
            [
              [
                "keyword",
                "ADELE"
              ]
            ],
            [
              [
                "keyword",
                "STING"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword <keyword> on Event Discovery Widget page",
          "Then found events contains <keyword> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "keyword",
              "ADELE"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2186
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 360
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 3844
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "keyword",
              "STING"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2761
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 484
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 2356
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|\n| 1   |\n| 100 |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value"
          ],
          "data": [
            [
              [
                "value",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals or less than Event Count <value>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2350
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2683
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                "durationInMillis": 55
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2469
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2491
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                "durationInMillis": 2168
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value",
            "actualValue"
          ],
          "data": [
            [
              [
                "value",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ],
              [
                "actualValue",
                "100"
              ]
            ],
            [
              [
                "value",
                "101"
              ],
              [
                "actualValue",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals Event Count <actualValue>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2726
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 2491
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 76
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2270
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2550
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 79
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2024
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2266
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 115
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "101"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2577
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                "durationInMillis": 2378
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 84
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "setValue",
            "actualValue"
          ],
          "data": [
            [
              [
                "setValue",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "19999"
              ],
              [
                "actualValue",
                "19999"
              ]
            ],
            [
              [
                "setValue",
                "20000"
              ],
              [
                "actualValue",
                "19999"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change value of ZipCode 90015 on Event Discovery Widget Page",
          "When set Radius <setValue> on Event Discovery Widget page",
          "Then Radius value is <actualValue> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "setValue",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2382
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 800
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 773
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 77
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2689
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 745
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 263
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 68
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "19999"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 1944
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 811
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 218
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 93
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "20000"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2218
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 713
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟20000｠ on Event Discovery Widget page",
                "durationInMillis": 146
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 72
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And store all fields values on the Event Discovery Widget page",
          "And change values for all possible fields on the Event Discovery Widget page",
          "When click reset button",
          "Then all fields have been reseted to defaults on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 2007
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 1045
            },
            {
              "step": "And change values for all possible fields on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
              "durationInMillis": 6961
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1800
            },
            {
              "step": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
              "durationInMillis": 486
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 40
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 5
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And store all fields values on the Event Discovery Widget page",
            "And change values for all possible fields on the Event Discovery Widget page",
            "When click reset button",
            "Then all fields have been reseted to defaults on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 2588
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 341
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 1035
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2064
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 731
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 396
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 751
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 899
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2382
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 297
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2358
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 823
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 404
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 771
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1487
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2496
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 192
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2448
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 841
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 444
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 811
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1080
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2327
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 100
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2469
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 963
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 477
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 827
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 819
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2476
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 90
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2691
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 927
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 414
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 730
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 897
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2359
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 84
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
          "Then the event message is shown \"Here other options for you.\""
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 2625
            },
            {
              "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
              "durationInMillis": 261
            },
            {
              "step": "Then the event message is shown \"Here other options for you.\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
              "durationInMillis": 921
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 50
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
            "Then the event message is shown \"Here other options for you.\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Request New Password page from LogIn page",
          "Then check general page elements for Pantheon Request New Password page"
        ]
      },
      "storyPath": "stories/site/pantheon/RequestNewPassword.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3159
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1036
            },
            {
              "step": "When navigate to Pantheon Request New Password page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
              "durationInMillis": 802
            },
            {
              "step": "Then check general page elements for Pantheon Request New Password page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
              "durationInMillis": 20379
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Request New Password page from LogIn page",
            "Then check general page elements for Pantheon Request New Password page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "Then check general page elements for Pantheon User Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2320
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1105
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 3792
            },
            {
              "step": "Then check general page elements for Pantheon User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User Account page",
              "durationInMillis": 20403
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": [
            {
              "@name": "debug",
              "@value": ""
            }
          ]
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "Then check general page elements for Pantheon User Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v2 page",
          "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v2 page",
              "durationInMillis": 5919
            },
            {
              "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1117
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v2 page",
            "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Products and Docs page",
          "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Products and Docs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Products and Docs page",
              "durationInMillis": 2015
            },
            {
              "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40391
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Products and Docs page",
            "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Inventory Status API page",
          "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Inventory Status API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Inventory Status API page",
              "durationInMillis": 4847
            },
            {
              "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 292
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Inventory Status API page",
            "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/branding-guide/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Branding Guide page",
          "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_BrandingGuide.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Branding Guide page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Branding Guide page",
              "durationInMillis": 3176
            },
            {
              "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 195
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/branding-guide/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Branding Guide page",
            "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    }
  ]
}}